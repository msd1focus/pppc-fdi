package app.fpp.model.entities.confirmation;

import app.fpp.model.entities.promoproposal.ProposalImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 11 08:09:34 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CategoryPcLogImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CategoryPcLogId {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getCategoryPcLogId();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setCategoryPcLogId((DBSequence)value);
            }
        }
        ,
        NoPc {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getNoPc();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setNoPc((String)value);
            }
        }
        ,
        NoPp {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getNoPp();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setNoPp((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getCreationDate();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreatedBy {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Proposal {
            public Object get(CategoryPcLogImpl obj) {
                return obj.getProposal();
            }

            public void put(CategoryPcLogImpl obj, Object value) {
                obj.setProposal((ProposalImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CategoryPcLogImpl object);

        public abstract void put(CategoryPcLogImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CATEGORYPCLOGID = AttributesEnum.CategoryPcLogId.index();
    public static final int NOPC = AttributesEnum.NoPc.index();
    public static final int NOPP = AttributesEnum.NoPp.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int PROPOSAL = AttributesEnum.Proposal.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CategoryPcLogImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.confirmation.CategoryPcLog");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for CategoryPcLogId, using the alias name CategoryPcLogId.
     * @return the CategoryPcLogId
     */
    public DBSequence getCategoryPcLogId() {
        return (DBSequence)getAttributeInternal(CATEGORYPCLOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CategoryPcLogId.
     * @param value value to set the CategoryPcLogId
     */
    public void setCategoryPcLogId(DBSequence value) {
        setAttributeInternal(CATEGORYPCLOGID, value);
    }

    /**
     * Gets the attribute value for NoPc, using the alias name NoPc.
     * @return the NoPc
     */
    public String getNoPc() {
        return (String)getAttributeInternal(NOPC);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoPc.
     * @param value value to set the NoPc
     */
    public void setNoPc(String value) {
        setAttributeInternal(NOPC, value);
    }

    /**
     * Gets the attribute value for NoPp, using the alias name NoPp.
     * @return the NoPp
     */
    public String getNoPp() {
        return (String)getAttributeInternal(NOPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoPp.
     * @param value value to set the NoPp
     */
    public void setNoPp(String value) {
        setAttributeInternal(NOPP, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity app.fpp.model.entities.promoproposal.ProposalImpl.
     */
    public ProposalImpl getProposal() {
        return (ProposalImpl)getAttributeInternal(PROPOSAL);
    }

    /**
     * Sets <code>value</code> as the associated entity app.fpp.model.entities.promoproposal.ProposalImpl.
     */
    public void setProposal(ProposalImpl value) {
        setAttributeInternal(PROPOSAL, value);
    }


    /**
     * @param categoryPcLogId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence categoryPcLogId) {
        return new Key(new Object[]{categoryPcLogId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
         super.create(attributeList);
         SequenceImpl seq = new SequenceImpl("CATEGORY_PC_LOG_SEQ", getDBTransaction());
         this.setCategoryPcLogId(new DBSequence(seq.getSequenceNumber()));
     }
}
