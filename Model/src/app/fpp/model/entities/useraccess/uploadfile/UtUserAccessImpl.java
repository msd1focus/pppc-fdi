package app.fpp.model.entities.useraccess.uploadfile;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 16 17:34:24 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UtUserAccessImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserName {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUserName();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setUserName((String)value);
            }
        }
        ,
        Password {
            public Object get(UtUserAccessImpl obj) {
                return obj.getPassword();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        FullName {
            public Object get(UtUserAccessImpl obj) {
                return obj.getFullName();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setFullName((String)value);
            }
        }
        ,
        Descr {
            public Object get(UtUserAccessImpl obj) {
                return obj.getDescr();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        Title {
            public Object get(UtUserAccessImpl obj) {
                return obj.getTitle();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        ContactNo {
            public Object get(UtUserAccessImpl obj) {
                return obj.getContactNo();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setContactNo((String)value);
            }
        }
        ,
        CompanyId {
            public Object get(UtUserAccessImpl obj) {
                return obj.getCompanyId();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setCompanyId((String)value);
            }
        }
        ,
        ActivePeriodFrom {
            public Object get(UtUserAccessImpl obj) {
                return obj.getActivePeriodFrom();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setActivePeriodFrom((Date)value);
            }
        }
        ,
        ActivePeriodTo {
            public Object get(UtUserAccessImpl obj) {
                return obj.getActivePeriodTo();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setActivePeriodTo((Date)value);
            }
        }
        ,
        UserInitial {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUserInitial();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setUserInitial((String)value);
            }
        }
        ,
        UserType {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUserType();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setUserType((String)value);
            }
        }
        ,
        UserDivision {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUserDivision();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setUserDivision((String)value);
            }
        }
        ,
        DirectSpv {
            public Object get(UtUserAccessImpl obj) {
                return obj.getDirectSpv();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setDirectSpv((String)value);
            }
        }
        ,
        UtUserAccessId {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserAccessId();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setUtUserAccessId((DBSequence)value);
            }
        }
        ,
        CustAuthFlag {
            public Object get(UtUserAccessImpl obj) {
                return obj.getCustAuthFlag();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setCustAuthFlag((String)value);
            }
        }
        ,
        UtUserRegion {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserRegion();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserLoc {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserLoc();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserArea {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserArea();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserCustType {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserCustType();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserCustGroup {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserCustGroup();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserCust {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserCust();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UtUserAccessRoles {
            public Object get(UtUserAccessImpl obj) {
                return obj.getUtUserAccessRoles();
            }

            public void put(UtUserAccessImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(UtUserAccessImpl object);

        public abstract void put(UtUserAccessImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int FULLNAME = AttributesEnum.FullName.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int CONTACTNO = AttributesEnum.ContactNo.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int ACTIVEPERIODFROM = AttributesEnum.ActivePeriodFrom.index();
    public static final int ACTIVEPERIODTO = AttributesEnum.ActivePeriodTo.index();
    public static final int USERINITIAL = AttributesEnum.UserInitial.index();
    public static final int USERTYPE = AttributesEnum.UserType.index();
    public static final int USERDIVISION = AttributesEnum.UserDivision.index();
    public static final int DIRECTSPV = AttributesEnum.DirectSpv.index();
    public static final int UTUSERACCESSID = AttributesEnum.UtUserAccessId.index();
    public static final int CUSTAUTHFLAG = AttributesEnum.CustAuthFlag.index();
    public static final int UTUSERREGION = AttributesEnum.UtUserRegion.index();
    public static final int UTUSERLOC = AttributesEnum.UtUserLoc.index();
    public static final int UTUSERAREA = AttributesEnum.UtUserArea.index();
    public static final int UTUSERCUSTTYPE = AttributesEnum.UtUserCustType.index();
    public static final int UTUSERCUSTGROUP = AttributesEnum.UtUserCustGroup.index();
    public static final int UTUSERCUST = AttributesEnum.UtUserCust.index();
    public static final int UTUSERACCESSROLES = AttributesEnum.UtUserAccessRoles.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UtUserAccessImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.useraccess.uploadfile.UtUserAccess");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for UserName, using the alias name UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String)getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserName.
     * @param value value to set the UserName
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the Password
     */
    public String getPassword() {
        return (String)getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for FullName, using the alias name FullName.
     * @return the FullName
     */
    public String getFullName() {
        return (String)getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FullName.
     * @param value value to set the FullName
     */
    public void setFullName(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for Descr, using the alias name Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String)getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Descr.
     * @param value value to set the Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for ContactNo, using the alias name ContactNo.
     * @return the ContactNo
     */
    public String getContactNo() {
        return (String)getAttributeInternal(CONTACTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContactNo.
     * @param value value to set the ContactNo
     */
    public void setContactNo(String value) {
        setAttributeInternal(CONTACTNO, value);
    }

    /**
     * Gets the attribute value for CompanyId, using the alias name CompanyId.
     * @return the CompanyId
     */
    public String getCompanyId() {
        return (String)getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyId.
     * @param value value to set the CompanyId
     */
    public void setCompanyId(String value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for ActivePeriodFrom, using the alias name ActivePeriodFrom.
     * @return the ActivePeriodFrom
     */
    public Date getActivePeriodFrom() {
        return (Date)getAttributeInternal(ACTIVEPERIODFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivePeriodFrom.
     * @param value value to set the ActivePeriodFrom
     */
    public void setActivePeriodFrom(Date value) {
        setAttributeInternal(ACTIVEPERIODFROM, value);
    }

    /**
     * Gets the attribute value for ActivePeriodTo, using the alias name ActivePeriodTo.
     * @return the ActivePeriodTo
     */
    public Date getActivePeriodTo() {
        return (Date)getAttributeInternal(ACTIVEPERIODTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActivePeriodTo.
     * @param value value to set the ActivePeriodTo
     */
    public void setActivePeriodTo(Date value) {
        setAttributeInternal(ACTIVEPERIODTO, value);
    }

    /**
     * Gets the attribute value for UserInitial, using the alias name UserInitial.
     * @return the UserInitial
     */
    public String getUserInitial() {
        return (String)getAttributeInternal(USERINITIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserInitial.
     * @param value value to set the UserInitial
     */
    public void setUserInitial(String value) {
        setAttributeInternal(USERINITIAL, value);
    }

    /**
     * Gets the attribute value for UserType, using the alias name UserType.
     * @return the UserType
     */
    public String getUserType() {
        return (String)getAttributeInternal(USERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserType.
     * @param value value to set the UserType
     */
    public void setUserType(String value) {
        setAttributeInternal(USERTYPE, value);
    }

    /**
     * Gets the attribute value for UserDivision, using the alias name UserDivision.
     * @return the UserDivision
     */
    public String getUserDivision() {
        return (String)getAttributeInternal(USERDIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserDivision.
     * @param value value to set the UserDivision
     */
    public void setUserDivision(String value) {
        setAttributeInternal(USERDIVISION, value);
    }

    /**
     * Gets the attribute value for DirectSpv, using the alias name DirectSpv.
     * @return the DirectSpv
     */
    public String getDirectSpv() {
        return (String)getAttributeInternal(DIRECTSPV);
    }

    /**
     * Sets <code>value</code> as the attribute value for DirectSpv.
     * @param value value to set the DirectSpv
     */
    public void setDirectSpv(String value) {
        setAttributeInternal(DIRECTSPV, value);
    }

    /**
     * Gets the attribute value for UtUserAccessId, using the alias name UtUserAccessId.
     * @return the UtUserAccessId
     */
    public DBSequence getUtUserAccessId() {
        return (DBSequence)getAttributeInternal(UTUSERACCESSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UtUserAccessId.
     * @param value value to set the UtUserAccessId
     */
    public void setUtUserAccessId(DBSequence value) {
        setAttributeInternal(UTUSERACCESSID, value);
    }

    /**
     * Gets the attribute value for CustAuthFlag, using the alias name CustAuthFlag.
     * @return the CustAuthFlag
     */
    public String getCustAuthFlag() {
        return (String)getAttributeInternal(CUSTAUTHFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustAuthFlag.
     * @param value value to set the CustAuthFlag
     */
    public void setCustAuthFlag(String value) {
        setAttributeInternal(CUSTAUTHFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserRegion() {
        return (RowIterator)getAttributeInternal(UTUSERREGION);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserLoc() {
        return (RowIterator)getAttributeInternal(UTUSERLOC);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserArea() {
        return (RowIterator)getAttributeInternal(UTUSERAREA);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserCustType() {
        return (RowIterator)getAttributeInternal(UTUSERCUSTTYPE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserCustGroup() {
        return (RowIterator)getAttributeInternal(UTUSERCUSTGROUP);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserCust() {
        return (RowIterator)getAttributeInternal(UTUSERCUST);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUtUserAccessRoles() {
        return (RowIterator)getAttributeInternal(UTUSERACCESSROLES);
    }


    /**
     * @param utUserAccessId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence utUserAccessId) {
        return new Key(new Object[]{utUserAccessId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("UT_USER_ACCESS_SEQ", getDBTransaction());
        this.setUtUserAccessId(new DBSequence(seq.getSequenceNumber()));
    }
}
