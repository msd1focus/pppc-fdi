package app.fpp.model.views.masterdata.lov.customer;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 17 12:35:39 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustLocFindParentViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RegionCode {
            public Object get(CustLocFindParentViewRowImpl obj) {
                return obj.getRegionCode();
            }

            public void put(CustLocFindParentViewRowImpl obj, Object value) {
                obj.setRegionCode((String)value);
            }
        }
        ,
        RegionDesc {
            public Object get(CustLocFindParentViewRowImpl obj) {
                return obj.getRegionDesc();
            }

            public void put(CustLocFindParentViewRowImpl obj, Object value) {
                obj.setRegionDesc((String)value);
            }
        }
        ,
        AreaCode {
            public Object get(CustLocFindParentViewRowImpl obj) {
                return obj.getAreaCode();
            }

            public void put(CustLocFindParentViewRowImpl obj, Object value) {
                obj.setAreaCode((String)value);
            }
        }
        ,
        AreaDesc {
            public Object get(CustLocFindParentViewRowImpl obj) {
                return obj.getAreaDesc();
            }

            public void put(CustLocFindParentViewRowImpl obj, Object value) {
                obj.setAreaDesc((String)value);
            }
        }
        ,
        LocCode {
            public Object get(CustLocFindParentViewRowImpl obj) {
                return obj.getLocCode();
            }

            public void put(CustLocFindParentViewRowImpl obj, Object value) {
                obj.setLocCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CustLocFindParentViewRowImpl object);

        public abstract void put(CustLocFindParentViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int REGIONCODE = AttributesEnum.RegionCode.index();
    public static final int REGIONDESC = AttributesEnum.RegionDesc.index();
    public static final int AREACODE = AttributesEnum.AreaCode.index();
    public static final int AREADESC = AttributesEnum.AreaDesc.index();
    public static final int LOCCODE = AttributesEnum.LocCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustLocFindParentViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute RegionCode.
     * @return the RegionCode
     */
    public String getRegionCode() {
        return (String) getAttributeInternal(REGIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RegionCode.
     * @param value value to set the  RegionCode
     */
    public void setRegionCode(String value) {
        setAttributeInternal(REGIONCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RegionDesc.
     * @return the RegionDesc
     */
    public String getRegionDesc() {
        return (String) getAttributeInternal(REGIONDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RegionDesc.
     * @param value value to set the  RegionDesc
     */
    public void setRegionDesc(String value) {
        setAttributeInternal(REGIONDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AreaCode.
     * @return the AreaCode
     */
    public String getAreaCode() {
        return (String) getAttributeInternal(AREACODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AreaCode.
     * @param value value to set the  AreaCode
     */
    public void setAreaCode(String value) {
        setAttributeInternal(AREACODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AreaDesc.
     * @return the AreaDesc
     */
    public String getAreaDesc() {
        return (String) getAttributeInternal(AREADESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AreaDesc.
     * @param value value to set the  AreaDesc
     */
    public void setAreaDesc(String value) {
        setAttributeInternal(AREADESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LocCode.
     * @return the LocCode
     */
    public String getLocCode() {
        return (String) getAttributeInternal(LOCCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocCode.
     * @param value value to set the  LocCode
     */
    public void setLocCode(String value) {
        setAttributeInternal(LOCCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
