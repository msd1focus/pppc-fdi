package app.fpp.model.views.budgetsetting;

import app.fpp.model.entities.budgetsetting.BudgetCustTranImpl;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 13 15:34:15 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BudgetCustomerInsertTranRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BudgetCustomerId {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getBudgetCustomerId();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setBudgetCustomerId((Number)value);
            }
        }
        ,
        BudgetCustTranId {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getBudgetCustTranId();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setBudgetCustTranId((DBSequence)value);
            }
        }
        ,
        Amount {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getAmount();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        BudgetType {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getBudgetType();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setBudgetType((String)value);
            }
        }
        ,
        Percentage {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getPercentage();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setPercentage((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getRemarks();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Action {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getAction();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setAction((String)value);
            }
        }
        ,
        BudgetDate {
            public Object get(BudgetCustomerInsertTranRowImpl obj) {
                return obj.getBudgetDate();
            }

            public void put(BudgetCustomerInsertTranRowImpl obj,
                            Object value) {
                obj.setBudgetDate((Date)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BudgetCustomerInsertTranRowImpl object);

        public abstract void put(BudgetCustomerInsertTranRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BUDGETCUSTOMERID = AttributesEnum.BudgetCustomerId.index();
    public static final int BUDGETCUSTTRANID = AttributesEnum.BudgetCustTranId.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int BUDGETTYPE = AttributesEnum.BudgetType.index();
    public static final int PERCENTAGE = AttributesEnum.Percentage.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int ACTION = AttributesEnum.Action.index();
    public static final int BUDGETDATE = AttributesEnum.BudgetDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BudgetCustomerInsertTranRowImpl() {
    }

    /**
     * Gets BudgetCustTran entity object.
     * @return the BudgetCustTran
     */
    public BudgetCustTranImpl getBudgetCustTran() {
        return (BudgetCustTranImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for BUDGET_CUSTOMER_ID using the alias name BudgetCustomerId.
     * @return the BUDGET_CUSTOMER_ID
     */
    public Number getBudgetCustomerId() {
        return (Number) getAttributeInternal(BUDGETCUSTOMERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_CUSTOMER_ID using the alias name BudgetCustomerId.
     * @param value value to set the BUDGET_CUSTOMER_ID
     */
    public void setBudgetCustomerId(Number value) {
        setAttributeInternal(BUDGETCUSTOMERID, value);
    }

    /**
     * Gets the attribute value for BUDGET_CUST_TRAN_ID using the alias name BudgetCustTranId.
     * @return the BUDGET_CUST_TRAN_ID
     */
    public DBSequence getBudgetCustTranId() {
        return (DBSequence)getAttributeInternal(BUDGETCUSTTRANID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_CUST_TRAN_ID using the alias name BudgetCustTranId.
     * @param value value to set the BUDGET_CUST_TRAN_ID
     */
    public void setBudgetCustTranId(DBSequence value) {
        setAttributeInternal(BUDGETCUSTTRANID, value);
    }

    /**
     * Gets the attribute value for AMOUNT using the alias name Amount.
     * @return the AMOUNT
     */
    public Number getAmount() {
        return (Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMOUNT using the alias name Amount.
     * @param value value to set the AMOUNT
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for BUDGET_TYPE using the alias name BudgetType.
     * @return the BUDGET_TYPE
     */
    public String getBudgetType() {
        return (String) getAttributeInternal(BUDGETTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_TYPE using the alias name BudgetType.
     * @param value value to set the BUDGET_TYPE
     */
    public void setBudgetType(String value) {
        setAttributeInternal(BUDGETTYPE, value);
    }

    /**
     * Gets the attribute value for PERCENTAGE using the alias name Percentage.
     * @return the PERCENTAGE
     */
    public Number getPercentage() {
        return (Number) getAttributeInternal(PERCENTAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for PERCENTAGE using the alias name Percentage.
     * @param value value to set the PERCENTAGE
     */
    public void setPercentage(Number value) {
        setAttributeInternal(PERCENTAGE, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ACTION using the alias name Action.
     * @return the ACTION
     */
    public String getAction() {
        return (String) getAttributeInternal(ACTION);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTION using the alias name Action.
     * @param value value to set the ACTION
     */
    public void setAction(String value) {
        setAttributeInternal(ACTION, value);
    }


    /**
     * Gets the attribute value for BUDGET_DATE using the alias name BudgetDate.
     * @return the BUDGET_DATE
     */
    public Date getBudgetDate() {
        return (Date) getAttributeInternal(BUDGETDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_DATE using the alias name BudgetDate.
     * @param value value to set the BUDGET_DATE
     */
    public void setBudgetDate(Date value) {
        setAttributeInternal(BUDGETDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
