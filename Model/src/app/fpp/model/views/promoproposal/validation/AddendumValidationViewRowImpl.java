package app.fpp.model.views.promoproposal.validation;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 24 21:46:56 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AddendumValidationViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProposalNo {
            public Object get(AddendumValidationViewRowImpl obj) {
                return obj.getProposalNo();
            }

            public void put(AddendumValidationViewRowImpl obj, Object value) {
                obj.setProposalNo((String)value);
            }
        }
        ,
        ConfirmNo {
            public Object get(AddendumValidationViewRowImpl obj) {
                return obj.getConfirmNo();
            }

            public void put(AddendumValidationViewRowImpl obj, Object value) {
                obj.setConfirmNo((String)value);
            }
        }
        ,
        CopySource {
            public Object get(AddendumValidationViewRowImpl obj) {
                return obj.getCopySource();
            }

            public void put(AddendumValidationViewRowImpl obj, Object value) {
                obj.setCopySource((String)value);
            }
        }
        ,
        AddendumKe {
            public Object get(AddendumValidationViewRowImpl obj) {
                return obj.getAddendumKe();
            }

            public void put(AddendumValidationViewRowImpl obj, Object value) {
                obj.setAddendumKe((String)value);
            }
        }
        ,
        Status {
            public Object get(AddendumValidationViewRowImpl obj) {
                return obj.getStatus();
            }

            public void put(AddendumValidationViewRowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AddendumValidationViewRowImpl object);

        public abstract void put(AddendumValidationViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PROPOSALNO = AttributesEnum.ProposalNo.index();
    public static final int CONFIRMNO = AttributesEnum.ConfirmNo.index();
    public static final int COPYSOURCE = AttributesEnum.CopySource.index();
    public static final int ADDENDUMKE = AttributesEnum.AddendumKe.index();
    public static final int STATUS = AttributesEnum.Status.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AddendumValidationViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ProposalNo.
     * @return the ProposalNo
     */
    public String getProposalNo() {
        return (String) getAttributeInternal(PROPOSALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProposalNo.
     * @param value value to set the  ProposalNo
     */
    public void setProposalNo(String value) {
        setAttributeInternal(PROPOSALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConfirmNo.
     * @return the ConfirmNo
     */
    public String getConfirmNo() {
        return (String) getAttributeInternal(CONFIRMNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConfirmNo.
     * @param value value to set the  ConfirmNo
     */
    public void setConfirmNo(String value) {
        setAttributeInternal(CONFIRMNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CopySource.
     * @return the CopySource
     */
    public String getCopySource() {
        return (String) getAttributeInternal(COPYSOURCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CopySource.
     * @param value value to set the  CopySource
     */
    public void setCopySource(String value) {
        setAttributeInternal(COPYSOURCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddendumKe.
     * @return the AddendumKe
     */
    public String getAddendumKe() {
        return (String) getAttributeInternal(ADDENDUMKE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddendumKe.
     * @param value value to set the  AddendumKe
     */
    public void setAddendumKe(String value) {
        setAttributeInternal(ADDENDUMKE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
