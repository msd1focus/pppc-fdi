package app.fpp.model.views.confirmation;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 12 14:52:54 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class checkAddendumBudgetClearViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProposalId {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getProposalId();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setProposalId((Number)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        ProductApproval {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getProductApproval();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setProductApproval((String)value);
            }
        }
        ,
        BudgetById {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getBudgetById();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setBudgetById((Number)value);
            }
        }
        ,
        BudgetCustId {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getBudgetCustId();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setBudgetCustId((Number)value);
            }
        }
        ,
        Amount {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getAmount();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        OverBudgetAmt {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getOverBudgetAmt();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setOverBudgetAmt((Number)value);
            }
        }
        ,
        Status {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getStatus();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        ProposalNo {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getProposalNo();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setProposalNo((String)value);
            }
        }
        ,
        ConfirmDate {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getConfirmDate();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setConfirmDate((Date)value);
            }
        }
        ,
        ConfirmNo {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getConfirmNo();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setConfirmNo((String)value);
            }
        }
        ,
        AddendumKe {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getAddendumKe();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setAddendumKe((String)value);
            }
        }
        ,
        CategoryPc {
            public Object get(checkAddendumBudgetClearViewRowImpl obj) {
                return obj.getCategoryPc();
            }

            public void put(checkAddendumBudgetClearViewRowImpl obj,
                            Object value) {
                obj.setCategoryPc((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(checkAddendumBudgetClearViewRowImpl object);

        public abstract void put(checkAddendumBudgetClearViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROPOSALID = AttributesEnum.ProposalId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int PRODUCTAPPROVAL = AttributesEnum.ProductApproval.index();
    public static final int BUDGETBYID = AttributesEnum.BudgetById.index();
    public static final int BUDGETCUSTID = AttributesEnum.BudgetCustId.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int OVERBUDGETAMT = AttributesEnum.OverBudgetAmt.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int PROPOSALNO = AttributesEnum.ProposalNo.index();
    public static final int CONFIRMDATE = AttributesEnum.ConfirmDate.index();
    public static final int CONFIRMNO = AttributesEnum.ConfirmNo.index();
    public static final int ADDENDUMKE = AttributesEnum.AddendumKe.index();
    public static final int CATEGORYPC = AttributesEnum.CategoryPc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public checkAddendumBudgetClearViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ProposalId.
     * @return the ProposalId
     */
    public Number getProposalId() {
        return (Number) getAttributeInternal(PROPOSALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProposalId.
     * @param value value to set the  ProposalId
     */
    public void setProposalId(Number value) {
        setAttributeInternal(PROPOSALID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PromoProdukId.
     * @return the PromoProdukId
     */
    public Number getPromoProdukId() {
        return (Number) getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PromoProdukId.
     * @param value value to set the  PromoProdukId
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductApproval.
     * @return the ProductApproval
     */
    public String getProductApproval() {
        return (String) getAttributeInternal(PRODUCTAPPROVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProductApproval.
     * @param value value to set the  ProductApproval
     */
    public void setProductApproval(String value) {
        setAttributeInternal(PRODUCTAPPROVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetById.
     * @return the BudgetById
     */
    public Number getBudgetById() {
        return (Number) getAttributeInternal(BUDGETBYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgetById.
     * @param value value to set the  BudgetById
     */
    public void setBudgetById(Number value) {
        setAttributeInternal(BUDGETBYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetCustId.
     * @return the BudgetCustId
     */
    public Number getBudgetCustId() {
        return (Number) getAttributeInternal(BUDGETCUSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgetCustId.
     * @param value value to set the  BudgetCustId
     */
    public void setBudgetCustId(Number value) {
        setAttributeInternal(BUDGETCUSTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Amount.
     * @return the Amount
     */
    public Number getAmount() {
        return (Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Amount.
     * @param value value to set the  Amount
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OverBudgetAmt.
     * @return the OverBudgetAmt
     */
    public Number getOverBudgetAmt() {
        return (Number) getAttributeInternal(OVERBUDGETAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OverBudgetAmt.
     * @param value value to set the  OverBudgetAmt
     */
    public void setOverBudgetAmt(Number value) {
        setAttributeInternal(OVERBUDGETAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Status.
     * @param value value to set the  Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProposalNo.
     * @return the ProposalNo
     */
    public String getProposalNo() {
        return (String) getAttributeInternal(PROPOSALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProposalNo.
     * @param value value to set the  ProposalNo
     */
    public void setProposalNo(String value) {
        setAttributeInternal(PROPOSALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConfirmDate.
     * @return the ConfirmDate
     */
    public Date getConfirmDate() {
        return (Date) getAttributeInternal(CONFIRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConfirmDate.
     * @param value value to set the  ConfirmDate
     */
    public void setConfirmDate(Date value) {
        setAttributeInternal(CONFIRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConfirmNo.
     * @return the ConfirmNo
     */
    public String getConfirmNo() {
        return (String) getAttributeInternal(CONFIRMNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConfirmNo.
     * @param value value to set the  ConfirmNo
     */
    public void setConfirmNo(String value) {
        setAttributeInternal(CONFIRMNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddendumKe.
     * @return the AddendumKe
     */
    public String getAddendumKe() {
        return (String) getAttributeInternal(ADDENDUMKE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddendumKe.
     * @param value value to set the  AddendumKe
     */
    public void setAddendumKe(String value) {
        setAttributeInternal(ADDENDUMKE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryPc.
     * @return the CategoryPc
     */
    public String getCategoryPc() {
        return (String) getAttributeInternal(CATEGORYPC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryPc.
     * @param value value to set the  CategoryPc
     */
    public void setCategoryPc(String value) {
        setAttributeInternal(CATEGORYPC, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
