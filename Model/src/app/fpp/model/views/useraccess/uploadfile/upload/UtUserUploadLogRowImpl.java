package app.fpp.model.views.useraccess.uploadfile.upload;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 22 17:04:51 ICT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UtUserUploadLogRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SyncCode {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getSyncCode();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setSyncCode((String)value);
            }
        }
        ,
        SyncExecDate {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getSyncExecDate();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setSyncExecDate((Date)value);
            }
        }
        ,
        SyncStatus {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getSyncStatus();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setSyncStatus((String)value);
            }
        }
        ,
        UserUploadLogId {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getUserUploadLogId();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setUserUploadLogId((Number)value);
            }
        }
        ,
        UtCode {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getUtCode();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setUtCode((String)value);
            }
        }
        ,
        UtExecDate {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getUtExecDate();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setUtExecDate((Date)value);
            }
        }
        ,
        UtStatus {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getUtStatus();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setUtStatus((String)value);
            }
        }
        ,
        ValCode {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getValCode();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setValCode((String)value);
            }
        }
        ,
        ValExecDate {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getValExecDate();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setValExecDate((Date)value);
            }
        }
        ,
        ValMsg {
            public Object get(UtUserUploadLogRowImpl obj) {
                return obj.getValMsg();
            }

            public void put(UtUserUploadLogRowImpl obj, Object value) {
                obj.setValMsg((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(UtUserUploadLogRowImpl object);

        public abstract void put(UtUserUploadLogRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SYNCCODE = AttributesEnum.SyncCode.index();
    public static final int SYNCEXECDATE = AttributesEnum.SyncExecDate.index();
    public static final int SYNCSTATUS = AttributesEnum.SyncStatus.index();
    public static final int USERUPLOADLOGID = AttributesEnum.UserUploadLogId.index();
    public static final int UTCODE = AttributesEnum.UtCode.index();
    public static final int UTEXECDATE = AttributesEnum.UtExecDate.index();
    public static final int UTSTATUS = AttributesEnum.UtStatus.index();
    public static final int VALCODE = AttributesEnum.ValCode.index();
    public static final int VALEXECDATE = AttributesEnum.ValExecDate.index();
    public static final int VALMSG = AttributesEnum.ValMsg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UtUserUploadLogRowImpl() {
    }

    /**
     * Gets UserUploadLog entity object.
     * @return the UserUploadLog
     */
    public EntityImpl getUserUploadLog() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for SYNC_CODE using the alias name SyncCode.
     * @return the SYNC_CODE
     */
    public String getSyncCode() {
        return (String) getAttributeInternal(SYNCCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SYNC_CODE using the alias name SyncCode.
     * @param value value to set the SYNC_CODE
     */
    public void setSyncCode(String value) {
        setAttributeInternal(SYNCCODE, value);
    }

    /**
     * Gets the attribute value for SYNC_EXEC_DATE using the alias name SyncExecDate.
     * @return the SYNC_EXEC_DATE
     */
    public Date getSyncExecDate() {
        return (Date) getAttributeInternal(SYNCEXECDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for SYNC_EXEC_DATE using the alias name SyncExecDate.
     * @param value value to set the SYNC_EXEC_DATE
     */
    public void setSyncExecDate(Date value) {
        setAttributeInternal(SYNCEXECDATE, value);
    }

    /**
     * Gets the attribute value for SYNC_STATUS using the alias name SyncStatus.
     * @return the SYNC_STATUS
     */
    public String getSyncStatus() {
        return (String) getAttributeInternal(SYNCSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SYNC_STATUS using the alias name SyncStatus.
     * @param value value to set the SYNC_STATUS
     */
    public void setSyncStatus(String value) {
        setAttributeInternal(SYNCSTATUS, value);
    }

    /**
     * Gets the attribute value for USER_UPLOAD_LOG_ID using the alias name UserUploadLogId.
     * @return the USER_UPLOAD_LOG_ID
     */
    public Number getUserUploadLogId() {
        return (Number) getAttributeInternal(USERUPLOADLOGID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_UPLOAD_LOG_ID using the alias name UserUploadLogId.
     * @param value value to set the USER_UPLOAD_LOG_ID
     */
    public void setUserUploadLogId(Number value) {
        setAttributeInternal(USERUPLOADLOGID, value);
    }

    /**
     * Gets the attribute value for UT_CODE using the alias name UtCode.
     * @return the UT_CODE
     */
    public String getUtCode() {
        return (String) getAttributeInternal(UTCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for UT_CODE using the alias name UtCode.
     * @param value value to set the UT_CODE
     */
    public void setUtCode(String value) {
        setAttributeInternal(UTCODE, value);
    }

    /**
     * Gets the attribute value for UT_EXEC_DATE using the alias name UtExecDate.
     * @return the UT_EXEC_DATE
     */
    public Date getUtExecDate() {
        return (Date) getAttributeInternal(UTEXECDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UT_EXEC_DATE using the alias name UtExecDate.
     * @param value value to set the UT_EXEC_DATE
     */
    public void setUtExecDate(Date value) {
        setAttributeInternal(UTEXECDATE, value);
    }

    /**
     * Gets the attribute value for UT_STATUS using the alias name UtStatus.
     * @return the UT_STATUS
     */
    public String getUtStatus() {
        return (String) getAttributeInternal(UTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for UT_STATUS using the alias name UtStatus.
     * @param value value to set the UT_STATUS
     */
    public void setUtStatus(String value) {
        setAttributeInternal(UTSTATUS, value);
    }

    /**
     * Gets the attribute value for VAL_CODE using the alias name ValCode.
     * @return the VAL_CODE
     */
    public String getValCode() {
        return (String) getAttributeInternal(VALCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for VAL_CODE using the alias name ValCode.
     * @param value value to set the VAL_CODE
     */
    public void setValCode(String value) {
        setAttributeInternal(VALCODE, value);
    }

    /**
     * Gets the attribute value for VAL_EXEC_DATE using the alias name ValExecDate.
     * @return the VAL_EXEC_DATE
     */
    public Date getValExecDate() {
        return (Date) getAttributeInternal(VALEXECDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for VAL_EXEC_DATE using the alias name ValExecDate.
     * @param value value to set the VAL_EXEC_DATE
     */
    public void setValExecDate(Date value) {
        setAttributeInternal(VALEXECDATE, value);
    }

    /**
     * Gets the attribute value for VAL_MSG using the alias name ValMsg.
     * @return the VAL_MSG
     */
    public String getValMsg() {
        return (String) getAttributeInternal(VALMSG);
    }

    /**
     * Sets <code>value</code> as attribute value for VAL_MSG using the alias name ValMsg.
     * @param value value to set the VAL_MSG
     */
    public void setValMsg(String value) {
        setAttributeInternal(VALMSG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
